generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  id                      String        @id @default(auto()) @map("_id") @db.ObjectId
  meetingId               String        @unique
  start                   DateTime      @default(now())
  end                     DateTime?
  uniqueParticipantsCount Int           @default(0)
  participants            Participant[]
}

model Participant {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  participantId String
  events        Event?
  Session       Session?  @relation(fields: [sessionId], references: [id])
  sessionId     String?   @db.ObjectId
  timelog       Timelog[]
}

model Event {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  Participant      Participant        @relation(fields: [pId], references: [id])
  pId              String             @unique @db.ObjectId
  mic              MicEvent[]
  webcam           WebcamEvent[]
  errors           ErrorEvent[]
  screenShare      ScreenShare[]
  screenShareAudio ScreenShareAudio[]
}

model MicEvent {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  start   DateTime
  end     DateTime?
  Event   Event?    @relation(fields: [eventId], references: [id])
  eventId String?   @db.ObjectId
}

model WebcamEvent {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  start   DateTime
  end     DateTime?
  Event   Event?    @relation(fields: [eventId], references: [id])
  eventId String?   @db.ObjectId
}

model ErrorEvent {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  start   DateTime
  message String
  Event   Event?   @relation(fields: [eventId], references: [id])
  eventId String?  @db.ObjectId
}

model ScreenShare {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  start   DateTime
  end     DateTime?
  Event   Event?    @relation(fields: [eventId], references: [id])
  eventId String?   @db.ObjectId
}

model ScreenShareAudio {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  start   DateTime
  end     DateTime?
  Event   Event?    @relation(fields: [eventId], references: [id])
  eventId String?   @db.ObjectId
}

model Timelog {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  start         DateTime
  end           DateTime?
  Participant   Participant? @relation(fields: [participantId], references: [id])
  participantId String?      @db.ObjectId
}
